package interfaceFolhaPag;

import TP1.Funcionario;
import TP1.Pagamento;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class FolhaDaPagamento extends javax.swing.JFrame {

    static ArrayList<Funcionario> listaFuncionario;
    static ArrayList<Pagamento> listaPagamento;
    
    String Botao; //variavel global
    public FolhaDaPagamento() {
        initComponents();
        
        setLocationRelativeTo(null);

        listaFuncionario = new ArrayList();
        listaPagamento = new ArrayList();
        //habilitar ou desabilitar compos de textos
        txtNomeFuncionario.setEnabled(false);
        txtCPFfuncionario.setEnabled(false);
        txtIdadeFuncionario.setEnabled(false);
        txtFuncaoFuncionario.setEnabled(false);
        txtNumDeVendas.setEnabled(false);
        txtQtdAvaliacao.setEnabled(false);
        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(false);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(true);
        botaoPesquisar.setEnabled(true);
        botaoCancelar.setEnabled(false);
        botaoExcluir.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoSalvar.setEnabled(false);
        botaoFinalizar.setEnabled(true);
        
        //habilitar e dasabilitar a tabela
        tabelaFuncionarios.setEnabled(true);
    }
    public void pagamentocomissao(){
         //habilitar e desabilitar botao de opção (radio botton)
        jRBPorComissao.setEnabled(true);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(false);
        
        int qtdVendas = Integer.parseInt(txtNumDeVendas.getText());
        porComissao pay = new porComissao(qtdVendas, 50, 0.05, 0, 0);
        pay.valorPagamento();
    }
    public void pagamentoHora(){
        //habilitar e desabilitar botao de opção (radio botton)
        txtHoraExtra.setEnabled(true);
        txtHoraTrabalhada.setEnabled(true);
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(true);
        jRBPorComissaoEHora.setEnabled(false);
        
        int numHora = Integer.parseInt(txtHoraTrabalhada.getText());
        double horaExtra = Double.parseDouble(txtHoraExtra.getText());
        
        porHora pay = new PorHora(15, numHora, horaExtra, 0);
        pay.valorPagamento();
    }
    //carregar a tabela com os dados de funcionário
    public void carregarTabelaFuncionario(){
        DefaultTableModel modeloTabela = new DefaultTableModel(new Object[] { "Nome", "CPF", "Idade", "Avaliação do cliente", "Função", "Salário"},0);    
        
        for(int i = 0; i < listaFuncionario.size(); i++){
            Object linha[] = new Object[]{ listaFuncionario.get(i).getNome(),
                                           listaFuncionario.get(i).getCPF(),
                                           listaFuncionario.get(i).getIdade(),
                                           listaFuncionario.get(i).getNumAvaliacao()};
            modeloTabela.addRow(linha);
        }
        for(int i = 0; i < listaPagamento.size(); i++){
           Object linha1[] = new Object[]{ listaPagamento.get(i).getFuncao(),
                                           listaPagamento.get(i).getSalario()};
           modeloTabela.addRow(linha1);
        }
        
        //Tabela recebe modelo
        tabelaFuncionarios.setModel(modeloTabela);
        tabelaFuncionarios.getColumnModel().getColumn(0).setPreferredWidth(100);
        tabelaFuncionarios.getColumnModel().getColumn(1).setPreferredWidth(10);
        tabelaFuncionarios.getColumnModel().getColumn(2).setPreferredWidth(40);
        tabelaFuncionarios.getColumnModel().getColumn(3).setPreferredWidth(10);
        tabelaFuncionarios.getColumnModel().getColumn(4).setPreferredWidth(20);
        tabelaFuncionarios.getColumnModel().getColumn(5).setPreferredWidth(5);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFolhaDePagamento = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionarios = new javax.swing.JTable();
        botaoNovo = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        botaoPesquisar = new javax.swing.JButton();
        botaoFinalizar = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblNomeFuncionario = new javax.swing.JLabel();
        txtNomeFuncionario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCPFfuncionario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIdadeFuncionario = new javax.swing.JTextField();
        lblAvaliacaoDocliente = new javax.swing.JLabel();
        lblPagamento = new javax.swing.JLabel();
        jRBPorComissao = new javax.swing.JRadioButton();
        jRBPorHora = new javax.swing.JRadioButton();
        jRBPorComissaoEHora = new javax.swing.JRadioButton();
        jRBPessimo = new javax.swing.JRadioButton();
        jRBRuim = new javax.swing.JRadioButton();
        jRBMediano = new javax.swing.JRadioButton();
        jRBBom = new javax.swing.JRadioButton();
        jRBOtimo = new javax.swing.JRadioButton();
        lblFuncao = new javax.swing.JLabel();
        txtFuncaoFuncionario = new javax.swing.JTextField();
        lblNumDeVendas = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNumDeVendas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblQtdAvaliacao = new javax.swing.JLabel();
        txtQtdAvaliacao = new javax.swing.JTextField();
        botaoPesquisarCPF = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtHoraExtra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtHoraTrabalhada = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Folha de pagamento dos Funcionários");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/Imagens/grupo.png")).getImage());
        setResizable(false);

        lblFolhaDePagamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFolhaDePagamento.setText("Folha de pagamento ");
        lblFolhaDePagamento.setToolTipText("Folha de pagamento dos funcionários, lista exclusiva de gerente");

        tabelaFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "CPF", "Idade", "Avaliação do Cliente", "Função", "Salário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Short.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaFuncionarios);
        if (tabelaFuncionarios.getColumnModel().getColumnCount() > 0) {
            tabelaFuncionarios.getColumnModel().getColumn(0).setPreferredWidth(100);
            tabelaFuncionarios.getColumnModel().getColumn(1).setPreferredWidth(10);
            tabelaFuncionarios.getColumnModel().getColumn(2).setPreferredWidth(40);
            tabelaFuncionarios.getColumnModel().getColumn(2).setMaxWidth(40);
            tabelaFuncionarios.getColumnModel().getColumn(3).setPreferredWidth(10);
            tabelaFuncionarios.getColumnModel().getColumn(4).setPreferredWidth(20);
            tabelaFuncionarios.getColumnModel().getColumn(5).setPreferredWidth(5);
        }

        botaoNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/addFuncionario.png"))); // NOI18N
        botaoNovo.setMnemonic('n');
        botaoNovo.setText("Novo");
        botaoNovo.setToolTipText("Novo funcionário");
        botaoNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovoActionPerformed(evt);
            }
        });

        botaoSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.png"))); // NOI18N
        botaoSalvar.setMnemonic('s');
        botaoSalvar.setText("Salvar");
        botaoSalvar.setToolTipText("Salvar dados de funcionário");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/findFuncionario.png"))); // NOI18N
        botaoPesquisar.setMnemonic('p');
        botaoPesquisar.setText("Pesquisar");
        botaoPesquisar.setToolTipText("Pesquisar funcionário");
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });

        botaoFinalizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botaoFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/check.png"))); // NOI18N
        botaoFinalizar.setMnemonic('f');
        botaoFinalizar.setText("Finalizar");
        botaoFinalizar.setToolTipText("Finalizar folha de pagamento");
        botaoFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarActionPerformed(evt);
            }
        });

        botaoCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancelar.png"))); // NOI18N
        botaoCancelar.setText("Cancelar");
        botaoCancelar.setToolTipText("Cancelar novo funcionário");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        botaoExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/removerFuncionario.png"))); // NOI18N
        botaoExcluir.setText("Excluir");
        botaoExcluir.setToolTipText("Excluir Funcionario");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        botaoEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/editar.png"))); // NOI18N
        botaoEditar.setText("Editar");
        botaoEditar.setToolTipText("Editar funcionário");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });

        lblNomeFuncionario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNomeFuncionario.setText("Nome:");
        lblNomeFuncionario.setToolTipText("Nome do funcionario");

        txtNomeFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeFuncionarioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("CPF:");
        jLabel1.setToolTipText("CPF do funcionário");

        txtCPFfuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFfuncionarioActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Idade:");
        jLabel2.setToolTipText("Idade do funcionário");

        txtIdadeFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdadeFuncionarioActionPerformed(evt);
            }
        });

        lblAvaliacaoDocliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblAvaliacaoDocliente.setText("Média de avaliações dos clientes:");
        lblAvaliacaoDocliente.setToolTipText("Avaliação do cliente sobre o atendimento");

        lblPagamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPagamento.setText("Pagamento:");
        lblPagamento.setToolTipText("Salário do funcionario, fora os adicionais de hora e comissão");

        jRBPorComissao.setText("Por comissão");
        jRBPorComissao.setToolTipText("O funcionário recebe pagamento por comissão");
        jRBPorComissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBPorComissaoActionPerformed(evt);
            }
        });

        jRBPorHora.setText("Por hora");
        jRBPorHora.setToolTipText("O funcionário recebe pagamento por hora");
        jRBPorHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBPorHoraActionPerformed(evt);
            }
        });

        jRBPorComissaoEHora.setText("Por comissão e hora");
        jRBPorComissaoEHora.setToolTipText("O funcionário recebe pagamento por comissão e hora");
        jRBPorComissaoEHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBPorComissaoEHoraActionPerformed(evt);
            }
        });

        jRBPessimo.setMnemonic('1');
        jRBPessimo.setText("1 - Péssimo");
        jRBPessimo.setToolTipText("Atendimento péssimo");
        jRBPessimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBPessimoActionPerformed(evt);
            }
        });

        jRBRuim.setMnemonic('2');
        jRBRuim.setText("2 - Ruim");
        jRBRuim.setToolTipText("Atendimento ruim");
        jRBRuim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBRuimActionPerformed(evt);
            }
        });

        jRBMediano.setMnemonic('3');
        jRBMediano.setText("3 - Mediano");
        jRBMediano.setToolTipText("Atendimento mediano");
        jRBMediano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBMedianoActionPerformed(evt);
            }
        });

        jRBBom.setMnemonic('4');
        jRBBom.setText("4 - Bom");
        jRBBom.setToolTipText("Atendimento bom");
        jRBBom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBBomActionPerformed(evt);
            }
        });

        jRBOtimo.setMnemonic('5');
        jRBOtimo.setText("5 - Ótimo");
        jRBOtimo.setToolTipText("Atendimento ótimo");
        jRBOtimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBOtimoActionPerformed(evt);
            }
        });

        lblFuncao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblFuncao.setText("Função:");
        lblFuncao.setToolTipText("Função do funcionário");

        txtFuncaoFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFuncaoFuncionarioActionPerformed(evt);
            }
        });

        lblNumDeVendas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNumDeVendas.setText("Número de vendas:");
        lblNumDeVendas.setToolTipText("Número de vendas que o funcionário fez no mês");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setToolTipText("Quantidade de avaliações que ele teve");

        lblQtdAvaliacao.setText("Quantidade de avaliações dos clientes:");

        botaoPesquisarCPF.setText("Pesquisar");
        botaoPesquisarCPF.setToolTipText("Pesquisar funcionários pelo CPF");
        botaoPesquisarCPF.setEnabled(false);
        botaoPesquisarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarCPFActionPerformed(evt);
            }
        });

        jLabel5.setText("Horas extras:");

        txtHoraExtra.setToolTipText("Quantidade de horas extras trabalhadas");
        txtHoraExtra.setEnabled(false);

        jLabel6.setText("Horas trabalhadas:");

        txtHoraTrabalhada.setToolTipText("Quantidade de horas trabalhadas");
        txtHoraTrabalhada.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblNumDeVendas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumDeVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(lblNomeFuncionario))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(150, 150, 150)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRBRuim)
                                            .addComponent(jRBPessimo)
                                            .addComponent(jRBMediano)
                                            .addComponent(jRBBom)
                                            .addComponent(jRBOtimo)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtCPFfuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botaoPesquisarCPF)))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(lblFuncao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFuncaoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addComponent(lblPagamento)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRBPorHora)
                                            .addComponent(jRBPorComissao)
                                            .addComponent(jRBPorComissaoEHora)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtHoraExtra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                                .addComponent(txtHoraTrabalhada, javax.swing.GroupLayout.Alignment.LEADING))))))
                            .addComponent(txtNomeFuncionario)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblQtdAvaliacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtdAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIdadeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))))
                    .addComponent(lblAvaliacaoDocliente))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNomeFuncionario)
                            .addComponent(txtNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFuncaoFuncionario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(txtCPFfuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFuncao)
                                .addComponent(botaoPesquisarCPF)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNumDeVendas)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumDeVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblQtdAvaliacao)
                                .addComponent(txtQtdAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(txtIdadeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPagamento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAvaliacaoDocliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jRBPorComissao)
                                .addComponent(jRBPessimo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRBPorHora)
                            .addComponent(jRBRuim))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRBPorComissaoEHora)
                            .addComponent(jRBMediano)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBBom))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtHoraExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBOtimo)
                    .addComponent(jLabel6)
                    .addComponent(txtHoraTrabalhada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoNovo)
                .addGap(18, 18, 18)
                .addComponent(botaoSalvar)
                .addGap(18, 18, 18)
                .addComponent(botaoCancelar)
                .addGap(18, 18, 18)
                .addComponent(botaoEditar)
                .addGap(18, 18, 18)
                .addComponent(botaoExcluir)
                .addGap(18, 18, 18)
                .addComponent(botaoPesquisar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(botaoFinalizar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoNovo)
                    .addComponent(botaoSalvar)
                    .addComponent(botaoCancelar)
                    .addComponent(botaoEditar)
                    .addComponent(botaoExcluir)
                    .addComponent(botaoPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(botaoFinalizar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(lblFolhaDePagamento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFolhaDePagamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        Botao = "Novo";

        if(txtNomeFuncionario.getText().equals("") || txtCPFfuncionario.getText().equals("") || 
           txtIdadeFuncionario.getText().equals("") || txtFuncaoFuncionario.getText().equals("") || 
           txtNumDeVendas.getText().equals("") || txtQtdAvaliacao.getText().equals("")){
           JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        }else{
            String nome = txtNomeFuncionario.getText();
            int CPF = Integer.parseInt(txtCPFfuncionario.getText());
            short idade = Short.parseShort(txtIdadeFuncionario.getText());
            int qtdAvaliacao = Integer.parseInt(txtQtdAvaliacao.getText());
            int numVendas = Integer.parseInt(txtNumDeVendas.getText());
            String funcao = txtFuncaoFuncionario.getText();

            int numAvaliacao = 0;
            switch(numAvaliacao){
                case 1:
                    jRBPessimo.setSelected(true);
                    break;
                case 2:
                    jRBRuim.setSelected(true);
                    break;
                case 3:
                    jRBMediano.setSelected(true);
                    break;
                case 4:
                    jRBBom.setSelected(true);
                    break;
                case 5:
                    jRBOtimo.setSelected(true);
                    break;
            }

            Funcionario funcionario = new Funcionario(nome, CPF, idade, numAvaliacao);
            Pagamento pay = new Pagamento() {
                public double valorDoSalario() {
                    return 1;
                }
            };
            if(Botao.equals("Novo")){
                listaFuncionario.add(funcionario);
                listaPagamento.add(pay);
                JOptionPane.showMessageDialog(null, "Funcionário cadastrado com sucesso!", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            }
            else if(Botao.equals("Editar")){
                int index = tabelaFuncionarios.getSelectedRow();
                listaFuncionario.get(index).setNome(nome);
                listaFuncionario.get(index).setCPF(CPF);
                listaFuncionario.get(index).setIdade(idade);
                listaFuncionario.get(index).setNumAvaliacao(numAvaliacao);
                listaPagamento.get(index).setFuncao(funcao);
                listaPagamento.get(index).setNumVendas(numVendas);
                listaPagamento.get(index).setQtdAvaliacao(qtdAvaliacao);


        }
        carregarTabelaFuncionario(); //carregar tabela funcionarios

        //limpar os campos 
        txtNomeFuncionario.setText("");
        txtCPFfuncionario.setText("");
        txtIdadeFuncionario.setText("");
        txtFuncaoFuncionario.setText("");
        txtNumDeVendas.setText("");
        txtQtdAvaliacao.setText("");

        jRBPessimo.setSelected(false);
        jRBRuim.setSelected(false);
        jRBMediano.setSelected(false);
        jRBBom.setSelected(false);
        jRBOtimo.setSelected(false);
        jRBPorComissao.setSelected(false);
        jRBPorHora.setSelected(false);
        jRBPorComissaoEHora.setSelected(false);
        
        //habilitar ou desabilitar compos de textos
        txtNomeFuncionario.setEnabled(false);
        txtCPFfuncionario.setEnabled(false);
        txtIdadeFuncionario.setEnabled(false);
        txtFuncaoFuncionario.setEnabled(false);
        txtNumDeVendas.setEnabled(false);        
        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(false);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(true);
        botaoPesquisar.setEnabled(true);
        botaoCancelar.setEnabled(false);
        botaoExcluir.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoSalvar.setEnabled(false);
        botaoFinalizar.setEnabled(true);
        
        //habilitar e dasabilitar a tabela
        tabelaFuncionarios.setEnabled(true);
        }
        
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void botaoFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarActionPerformed
        JOptionPane.showMessageDialog(null, "Folha de pagamento finalizada!", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
    }//GEN-LAST:event_botaoFinalizarActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        //limpar os campos 
        txtNomeFuncionario.setText("");
        txtCPFfuncionario.setText("");
        txtIdadeFuncionario.setText("");
        txtFuncaoFuncionario.setText("");
        txtNumDeVendas.setText("");
        txtQtdAvaliacao.setText("");

        jRBPessimo.setSelected(false);
        jRBRuim.setSelected(false);
        jRBMediano.setSelected(false);
        jRBBom.setSelected(false);
        jRBOtimo.setSelected(false);
        jRBPorComissao.setSelected(false);
        jRBPorHora.setSelected(false);
        jRBPorComissaoEHora.setSelected(false);
        
        //habilitar ou desabilitar compos de textos
        txtNomeFuncionario.setEnabled(false);
        txtCPFfuncionario.setEnabled(false);
        txtIdadeFuncionario.setEnabled(false);
        txtFuncaoFuncionario.setEnabled(false);
        txtNumDeVendas.setEnabled(false);        
        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(false);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(true);
        botaoPesquisar.setEnabled(true);
        botaoCancelar.setEnabled(false);
        botaoExcluir.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoSalvar.setEnabled(false);
        botaoFinalizar.setEnabled(true);
        
        //habilitar e dasabilitar a tabela
        tabelaFuncionarios.setEnabled(true);
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void txtIdadeFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdadeFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdadeFuncionarioActionPerformed

    private void jRBPorHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBPorHoraActionPerformed
       pagamentoHora();
    }//GEN-LAST:event_jRBPorHoraActionPerformed

    private void jRBMedianoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBMedianoActionPerformed
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(true);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        
        int pessimo = 1, ruim = 2, mediano = 3, bom = 4, otimo = 5;
        Funcionario funcionario = new Funcionario();
        funcionario.numAvaliacao =  mediano;
    }//GEN-LAST:event_jRBMedianoActionPerformed

    private void jRBPessimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBPessimoActionPerformed
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(true);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        
        int pessimo = 1, ruim = 2, mediano = 3, bom = 4, otimo = 5;
        Funcionario funcionario = new Funcionario();
        funcionario.numAvaliacao =  pessimo;
        
    }//GEN-LAST:event_jRBPessimoActionPerformed

    private void botaoNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNovoActionPerformed
        //limpar os campos 
        txtNomeFuncionario.setText("");
        txtCPFfuncionario.setText("");
        txtIdadeFuncionario.setText("");
        txtFuncaoFuncionario.setText("");
        txtNumDeVendas.setText("");
        txtQtdAvaliacao.setText("");
        
        //habilitar e desabilitar os campos de texto
        txtNomeFuncionario.setEnabled(true);
        txtCPFfuncionario.setEnabled(true);
        txtIdadeFuncionario.setEnabled(true);
        txtFuncaoFuncionario.setEnabled(true);
        txtNumDeVendas.setEnabled(true);
        txtQtdAvaliacao.setEnabled(true);

        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(true);
        jRBRuim.setEnabled(true);
        jRBMediano.setEnabled(true);
        jRBBom.setEnabled(true);
        jRBOtimo.setEnabled(true);
        jRBPorComissao.setEnabled(true);
        jRBPorHora.setEnabled(true);
        jRBPorComissaoEHora.setEnabled(true);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(false);
        botaoPesquisar.setEnabled(false);
        botaoCancelar.setEnabled(true);
        botaoExcluir.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoSalvar.setEnabled(true);
        botaoFinalizar.setEnabled(true);
        
        //habilitar e desabilitar a tabela
        tabelaFuncionarios.setEnabled(true);
    }//GEN-LAST:event_botaoNovoActionPerformed

    private void jRBRuimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBRuimActionPerformed
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(true);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        int pessimo = 1, ruim = 2, mediano = 3, bom = 4, otimo = 5;
        Funcionario funcionario = new Funcionario();
        funcionario.numAvaliacao =  ruim;
    }//GEN-LAST:event_jRBRuimActionPerformed

    private void jRBBomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBBomActionPerformed
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(true);
        jRBOtimo.setEnabled(false);
        Funcionario novo1 = new Funcionario();
        
        int pessimo = 1, ruim = 2, mediano = 3, bom = 4, otimo = 5;
        Funcionario funcionario = new Funcionario();
        funcionario.numAvaliacao =  bom;
    }//GEN-LAST:event_jRBBomActionPerformed

    private void jRBOtimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBOtimoActionPerformed
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(true);
        
        int pessimo = 1, ruim = 2, mediano = 3, bom = 4, otimo = 5;
        Funcionario funcionario = new Funcionario();
        funcionario.numAvaliacao =  otimo;
    }//GEN-LAST:event_jRBOtimoActionPerformed

    private void jRBPorComissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBPorComissaoActionPerformed
        pagamentoComissao();
        
    }//GEN-LAST:event_jRBPorComissaoActionPerformed

    private void jRBPorComissaoEHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBPorComissaoEHoraActionPerformed
        //habilitar e desabilitar botao de opção (radio botton)
        
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(true);
        txtHoraExtra.setEnabled(true);
        txtHoraTrabalhada.setEnabled(true);
        //para comissao
        int qtdVendas = Integer.parseInt(txtNumDeVendas.getText());
        porComissao pay1 = new porComissao(qtdVendas, 50, 0.05, 0, 0);
        pay1.salario = valorPagamento();
    
        //para vendas
        int numHora = Integer.parseInt(txtHoraTrabalhada.getText());
        double horaExtra = Double.parseDouble(txtHoraExtra.getText());
        
        porHora pay2 = new PorHora(15, numHora, horaExtra, 0);
        pay2.salario = valorPagamento();
        
        ComissaoEHora pay3 = new ComissaoEHora(0);
        pay3.salario = valorPagamento();
    }//GEN-LAST:event_jRBPorComissaoEHoraActionPerformed

    private void txtFuncaoFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFuncaoFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFuncaoFuncionarioActionPerformed

    private void tabelaFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaFuncionariosMouseClicked
        int i = tabelaFuncionarios.getSelectedRow();
        if(i>= 0 && i < listaFuncionario.size() && i < listaPagamento.size()){
            Funcionario f = listaFuncionario.get(i);
            txtNomeFuncionario.setText(f.getNome());
            txtIdadeFuncionario.setText(String.valueOf(f.getIdade()));
            txtCPFfuncionario.setText(String.valueOf(f.getCPF()));
            
            Pagamento g = listaPagamento.get(i);
            txtFuncaoFuncionario.setText(g.getFuncao());
            txtNumDeVendas.setText(String.valueOf(g.getNumVendas()));
            txtQtdAvaliacao.setText(String.valueOf(g.getQtdAvaliacao()));
        }
       //habilitar ou desabilitar compos de textos
        txtNomeFuncionario.setEnabled(false);
        txtCPFfuncionario.setEnabled(false);
        txtIdadeFuncionario.setEnabled(false);
        txtFuncaoFuncionario.setEnabled(false);
        txtNumDeVendas.setEnabled(false);        
        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(false);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(true);
        botaoPesquisar.setEnabled(true);
        botaoCancelar.setEnabled(false);
        botaoExcluir.setEnabled(true);
        botaoEditar.setEnabled(true);
        botaoSalvar.setEnabled(false);
        botaoFinalizar.setEnabled(true);
    }//GEN-LAST:event_tabelaFuncionariosMouseClicked

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
         Botao = "Editar";
        //habilitar e desabilitar os campos de texto
        txtNomeFuncionario.setEnabled(true);
        txtCPFfuncionario.setEnabled(true);
        txtIdadeFuncionario.setEnabled(true);
        txtFuncaoFuncionario.setEnabled(true);
        txtNumDeVendas.setEnabled(true);
        txtQtdAvaliacao.setEnabled(true);

        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(true);
        jRBRuim.setEnabled(true);
        jRBMediano.setEnabled(true);
        jRBBom.setEnabled(true);
        jRBOtimo.setEnabled(true);
        jRBPorComissao.setEnabled(true);
        jRBPorHora.setEnabled(true);
        jRBPorComissaoEHora.setEnabled(true);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(false);
        botaoPesquisar.setEnabled(false);
        botaoCancelar.setEnabled(true);
        botaoExcluir.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoSalvar.setEnabled(true);
        botaoFinalizar.setEnabled(true);
        

    }//GEN-LAST:event_botaoEditarActionPerformed

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        int index = tabelaFuncionarios.getSelectedRow();
            if(index>= 0 && index < listaFuncionario.size() && index < listaPagamento.size()){
                listaFuncionario.remove(index);
                listaPagamento.remove(index);
        }    
        
        carregarTabelaFuncionario();
        
        //limpar os campos 
        txtNomeFuncionario.setText("");
        txtCPFfuncionario.setText("");
        txtIdadeFuncionario.setText("");
        txtFuncaoFuncionario.setText("");
        txtNumDeVendas.setText("");
        txtQtdAvaliacao.setText("");
        
        //habilitar e desabilitar os campos de texto
        txtNomeFuncionario.setEnabled(false);
        txtCPFfuncionario.setEnabled(false);
        txtIdadeFuncionario.setEnabled(false);
        txtFuncaoFuncionario.setEnabled(false);
        txtNumDeVendas.setEnabled(false);
        txtQtdAvaliacao.setEnabled(false);

        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(false);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(true);
        botaoPesquisar.setEnabled(true);
        botaoCancelar.setEnabled(false);
        botaoExcluir.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoSalvar.setEnabled(false);
        botaoFinalizar.setEnabled(true);
        
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarActionPerformed
        if(listaFuncionario.isEmpty())
            JOptionPane.showMessageDialog(null, "Preencha CPF", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        else{
        //limpar os campos 
        txtNomeFuncionario.setText("");
        txtCPFfuncionario.setText("");
        txtIdadeFuncionario.setText("");
        txtFuncaoFuncionario.setText("");
        txtNumDeVendas.setText("");
        txtQtdAvaliacao.setText("");

        jRBPessimo.setSelected(false);
        jRBRuim.setSelected(false);
        jRBMediano.setSelected(false);
        jRBBom.setSelected(false);
        jRBOtimo.setSelected(false);
        jRBPorComissao.setSelected(false);
        jRBPorHora.setSelected(false);
        jRBPorComissaoEHora.setSelected(false);
        
        //habilitar ou desabilitar compos de textos
        txtNomeFuncionario.setEnabled(false);
        txtCPFfuncionario.setEnabled(true);     //a pesquisa será feita pelo CPF
        txtIdadeFuncionario.setEnabled(false);
        txtFuncaoFuncionario.setEnabled(false);
        txtNumDeVendas.setEnabled(false);        
        
        //habilitar e desabilitar botao de opção (radio botton)
        jRBPessimo.setEnabled(false);
        jRBRuim.setEnabled(false);
        jRBMediano.setEnabled(false);
        jRBBom.setEnabled(false);
        jRBOtimo.setEnabled(false);
        jRBPorComissao.setEnabled(false);
        jRBPorHora.setEnabled(false);
        jRBPorComissaoEHora.setEnabled(false);
        
        //habilitar e desabilitar botoes
        botaoNovo.setEnabled(false);
        botaoPesquisar.setEnabled(false);
        botaoPesquisarCPF.setEnabled(true);
        botaoCancelar.setEnabled(true);
        botaoExcluir.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoSalvar.setEnabled(false);
        botaoFinalizar.setEnabled(true);
        }
            }//GEN-LAST:event_botaoPesquisarActionPerformed

    private void botaoPesquisarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarCPFActionPerformed
        Funcionario f = new Funcionario();
        Pagamento g;
        g = new Pagamento() {
            @Override
            public double valorDoSalario() {
                return 1;
            }
        };
        if(txtCPFfuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Preencha CPF", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            String fNome = "", fCPF = "", fIdade = "", fNumDeAvaliacao = "", gNumDeVendas = "", gQtdAvaliacao = "", gFuncao = "";
            int CPF = Integer.parseInt(txtCPFfuncionario.getText());
            for(int i = 0; i <listaFuncionario.size(); i++){
                f = listaFuncionario.get(i);
                if(CPF == f.getCPF()){
                     fNome = String.valueOf(f.getNome());
                     fCPF = String.valueOf(f.getCPF());
                     fIdade = String.valueOf(f.getIdade());
                     fNumDeAvaliacao = String.valueOf(f.getNumAvaliacao());
                     gNumDeVendas = String.valueOf(g.getNumVendas());
                     gQtdAvaliacao = String.valueOf(g.getQtdAvaliacao()); 
                     gFuncao = String.valueOf(g.getFuncao()); 
            }
            if(txtCPFfuncionario.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Preencha CPF", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                
                //limpar os campos 
                txtNomeFuncionario.setText("");
                txtCPFfuncionario.setText("");
                txtIdadeFuncionario.setText("");
                txtFuncaoFuncionario.setText("");
                txtNumDeVendas.setText("");
                txtQtdAvaliacao.setText("");

                //habilitar e desabilitar os campos de texto
                txtNomeFuncionario.setEnabled(true);
                txtCPFfuncionario.setEnabled(true);
                txtIdadeFuncionario.setEnabled(true);
                txtFuncaoFuncionario.setEnabled(true);
                txtNumDeVendas.setEnabled(true);
                txtQtdAvaliacao.setEnabled(true);


                //habilitar e desabilitar botao de opção (radio botton)
                jRBPessimo.setEnabled(true);
                jRBRuim.setEnabled(true);
                jRBMediano.setEnabled(true);
                jRBBom.setEnabled(true);
                jRBOtimo.setEnabled(true);
                jRBPorComissao.setEnabled(true);
                jRBPorHora.setEnabled(true);
                jRBPorComissaoEHora.setEnabled(true);
            }else{
                txtNomeFuncionario.setText(fNome);
                txtCPFfuncionario.setText(fCPF);
                txtIdadeFuncionario.setText(fIdade);
                txtFuncaoFuncionario.setText(gFuncao);
                txtNumDeVendas.setText(fNumDeAvaliacao);
                txtQtdAvaliacao.setText(gQtdAvaliacao);
            }
            txtCPFfuncionario.selectAll();
            txtCPFfuncionario.requestFocus();
        }
        }
    }//GEN-LAST:event_botaoPesquisarCPFActionPerformed

    private void txtCPFfuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFfuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFfuncionarioActionPerformed

    private void txtNomeFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeFuncionarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FolhaDaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FolhaDaPagamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoFinalizar;
    private javax.swing.JButton botaoNovo;
    private javax.swing.JButton botaoPesquisar;
    private javax.swing.JButton botaoPesquisarCPF;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRBBom;
    private javax.swing.JRadioButton jRBMediano;
    private javax.swing.JRadioButton jRBOtimo;
    private javax.swing.JRadioButton jRBPessimo;
    private javax.swing.JRadioButton jRBPorComissao;
    private javax.swing.JRadioButton jRBPorComissaoEHora;
    private javax.swing.JRadioButton jRBPorHora;
    private javax.swing.JRadioButton jRBRuim;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvaliacaoDocliente;
    private javax.swing.JLabel lblFolhaDePagamento;
    private javax.swing.JLabel lblFuncao;
    private javax.swing.JLabel lblNomeFuncionario;
    private javax.swing.JLabel lblNumDeVendas;
    private javax.swing.JLabel lblPagamento;
    private javax.swing.JLabel lblQtdAvaliacao;
    private javax.swing.JTable tabelaFuncionarios;
    private javax.swing.JTextField txtCPFfuncionario;
    private javax.swing.JTextField txtFuncaoFuncionario;
    private javax.swing.JTextField txtHoraExtra;
    private javax.swing.JTextField txtHoraTrabalhada;
    private javax.swing.JTextField txtIdadeFuncionario;
    private javax.swing.JTextField txtNomeFuncionario;
    private javax.swing.JTextField txtNumDeVendas;
    private javax.swing.JTextField txtQtdAvaliacao;
    // End of variables declaration//GEN-END:variables
}
